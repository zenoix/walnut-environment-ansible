---
- name: Golang | Define GOARCH | "{{ ansible_distribution }}"
  ansible.builtin.set_fact:
    goarch: "{{ ansible_machine | replace('x86_64', 'amd64') | replace('aarch64', 'arm64') }}"

- name: Golang | Define GOOS | "{{ ansible_distribution }}"
  ansible.builtin.set_fact:
    goos: "{{ ansible_system | lower }}"

- name: Golang | GOARCH Value | "{{ ansible_distribution }}"
  ansible.builtin.debug:
    var: goarch

- name: Golang | GOOS Value | "{{ ansible_distribution }}"
  ansible.builtin.debug:
    var: goos

- name: Golang | Getting version information | "{{ ansible_distribution }}"
  ansible.builtin.command: "/usr/bin/go version"
  register: current_go_version
  changed_when: false
  failed_when: false

- name: Golang | Querying Latest Version JSON | "{{ ansible_distribution }}"
  ansible.builtin.uri:
    url: https://go.dev/dl/?mode=json
  register: go_latest_version_json
  changed_when: false

- name: Golang | Registering go Latest Version | "{{ ansible_distribution }}"
  ansible.builtin.set_fact:
    go_latest_version: "go version {{ go_latest_version_json.json[0].version }} {{ goos }}/{{ goarch }}"

- name: Golang | Registering go Latest Release | "{{ ansible_distribution }}"
  ansible.builtin.set_fact:
    go_latest_release: "{{ go_latest_version_json.json[0].version }}"

- name: Golang | Show current_go_version debug | "{{ ansible_distribution }}"
  ansible.builtin.debug:
    var: current_go_version.stdout|default('')

- name: Golang | Show go_latest_release debug | "{{ ansible_distribution }}"
  ansible.builtin.debug:
    var: go_latest_release

- name: Golang | Install Go | "{{ ansible_distribution }}"
  community.general.pacman:
    name: go
    state: present
  become: true
